name: Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: crest-linux
            asset_name: crest-linux-x64.tar.gz
          - os: windows-latest
            artifact_name: crest-windows
            asset_name: crest-windows-x64.zip
          - os: macos-latest
            artifact_name: crest-macos
            asset_name: crest-macos-x64.tar.gz
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: latest
    
    - name: Build Release
      run: |
        xmake config -m release
        xmake build
    
    - name: Package (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        mkdir -p release/lib
        mkdir -p release/include
        cp -r build/lib/* release/lib/
        cp -r include/* release/include/
        tar -czf ${{ matrix.asset_name }} -C release .
    
    - name: Package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir release\lib
        mkdir release\include
        xcopy /E /I build\lib release\lib
        xcopy /E /I include release\include
        powershell Compress-Archive -Path release\* -DestinationPath ${{ matrix.asset_name }}
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ./${{ matrix.asset_name }}
        token: ${{ env.GH_TOKEN }}
        body: |
          ${{ github.event.release.body }}

          ## ðŸ“¦ Build Artifacts

          - **Linux**: crest-linux-x64.tar.gz
          - **Windows**: crest-windows-x64.zip
          - **macOS**: crest-macos-x64.tar.gz

          ## ðŸš€ Installation

          ### Linux/macOS
          ```bash
          tar -xzf crest-linux-x64.tar.gz
          sudo cp -r lib/* /usr/local/lib/
          sudo cp -r include/* /usr/local/include/
          ```

          ### Windows
          Extract the zip file and add to your project include/lib paths.

          ## ðŸ“š Documentation

          Visit [https://muhammad-fiaz.github.io/crest](https://muhammad-fiaz.github.io/crest) for full documentation.
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: matrix.os == 'ubuntu-latest'

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ./${{ matrix.asset_name }}
        token: ${{ env.GH_TOKEN }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: matrix.os != 'ubuntu-latest'

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Generate Documentation Site
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install mkdocs mkdocs-material
        mkdocs build
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ env.GH_TOKEN }}
        publish_dir: ./site
        cname: muhammad-fiaz.github.io
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
